[gd_scene load_steps=2 format=3 uid="uid://b5h7eloflp4mw"]

[sub_resource type="GDScript" id="GDScript_1e8r1"]
script/source = "extends Node

var internal_variable = 13

func _ready():
	await SceneManager.scene_loaded
	SceneManager.get_entity(\"Button\").button_down.connect(_on_button_down)

func _on_button_down():
	if not SceneManager.is_transitioning:
		SceneManager.change_scene(
			\"res://demo/test.tscn\", {
				\"pattern_enter\": \"diagonal\",
				\"pattern_leave\": \"curtains\",
				\"invert_on_leave\": false,
				\"on_tree_enter\": func(scene): scene.internal_variable += internal_variable
			}
		)
"

[node name="Level2" type="Node"]
script = SubResource("GDScript_1e8r1")

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="ColorRect" type="ColorRect" parent="CanvasLayer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
color = Color(0.313726, 0.207843, 0.337255, 1)

[node name="Button" type="Button" parent="CanvasLayer/ColorRect" groups=["scene_manager_entity_nodes"]]
layout_mode = 0
anchor_left = 0.4
anchor_top = 0.4
anchor_right = 0.6
anchor_bottom = 0.6
text = "Change Scene"
metadata/entity_name = "Button"
